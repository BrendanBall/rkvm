use crate::event::Key;

impl Key {
    pub(crate) fn to_raw(&self) -> Option<(u16, bool)> {
        use Key::*;

        #[deny(unreachable_patterns)]
        let ke = match *self {
            A => (0x1E, false),
            B => (0x30, false),
            C => (0x2E, false),
            D => (0x20, false),
            E => (0x12, false),
            F => (0x21, false),
            G => (0x22, false),
            H => (0x23, false),
            I => (0x17, false),
            J => (0x24, false),
            K => (0x25, false),
            L => (0x26, false),
            M => (0x32, false),
            N => (0x31, false),
            O => (0x18, false),
            P => (0x19, false),
            Q => (0x10, false),
            R => (0x13, false),
            S => (0x1F, false),
            T => (0x14, false),
            U => (0x16, false),
            V => (0x2F, false),
            W => (0x11, false),
            X => (0x2D, false),
            Y => (0x15, false),
            Z => (0x2C, false),
            N0 => (0x0B, false),
            N1 => (0x02, false),
            N2 => (0x03, false),
            N3 => (0x04, false),
            N4 => (0x05, false),
            N5 => (0x06, false),
            N6 => (0x07, false),
            N7 => (0x08, false),
            N8 => (0x09, false),
            N9 => (0x0A, false),
            Grave => (0x29, false),
            Minus => (0x0C, false),
            Equal => (0x0D, false),
            Backslash => (0x2B, false),
            Backspace => (0x0E, false),
            Space => (0x39, false),
            Tab => (0x0F, false),
            CapsLock => (0x3A, false),
            LeftShift => (0x2A, false),
            LeftCtrl => (0x1D, false),
            LeftMeta => (0x5B, true),
            LeftAlt => (0x38, false),
            RightShift => (0x36, false),
            RightCtrl => (0x1D, true),
            RightMeta => (0x5C, true),
            RightAlt => (0x38, true),
            Appselect => (0x5D, true),
            Enter => (0x1C, false),
            Esc => (0x01, false),
            F1 => (0x3B, false),
            F2 => (0x3C, false),
            F3 => (0x3D, false),
            F4 => (0x3E, false),
            F5 => (0x3F, false),
            F6 => (0x40, false),
            F7 => (0x41, false),
            F8 => (0x42, false),
            F9 => (0x43, false),
            F10 => (0x44, false),
            F11 => (0x57, false),
            F12 => (0x58, false),
            SysRq => todo!(),
            ScrollLock => (0x46, false),
            Pause => todo!(),
            LeftBrace => (0x1A, false),
            Insert => (0x52, true),
            Home => (0x47, true),
            Pageup => (0x49, true),
            Delete => (0x53, true),
            End => (0x4F, true),
            Pagedown => (0x51, true),
            Up => (0x48, true),
            Left => (0x4B, true),
            Down => (0x50, true),
            Right => (0x4D, true),
            NumLock => (0x45, false),
            KpSlash => (0x35, true),
            KpAsterisk => (0x37, false),
            KpMinus => (0x4A, false),
            KpPlus => (0x4E, false),
            KpEnter => (0x1C, true),
            KpDott => (0x1C, false),
            Kp0 => (0x52, false),
            Kp1 => (0x4F, false),
            Kp2 => (0x50, false),
            Kp3 => (0x51, false),
            Kp4 => (0x4B, false),
            Kp5 => (0x4C, false),
            Kp6 => (0x4D, false),
            Kp7 => (0x47, false),
            Kp8 => (0x48, false),
            Kp9 => (0x49, false),
            RightBrace => (0x1B, false),
            Semicolon => (0x27, false),
            Apostrophe => (0x28, false),
            Comma => (0x33, false),
            Dot => (0x34, false),
            Slash => (0x35, false),
            _ => return None,
        };

        Some(ke)
    }
}
